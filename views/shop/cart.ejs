<main class="main">
  <div class="page-header breadcrumb-wrap">
    <div class="container">
      <div class="breadcrumb">
        <a href="/" rel="nofollow">Home</a>
        <span></span>
        <a href="/allProducts" rel="nofollow">Shop</a>
        <span></span>
        <a href="/cart" rel="nofollow">Your Cart</a>
      </div>
    </div>
  </div>
  <section class="mt-50 mb-50">
    <div class="container">
      <div class="row">
        <div class="col-8">
          <div class="table-responsive">
            <table class="table shopping-summery text-center clean">
              <thead>
                <tr class="main-heading">
                  <th scope="col">Image</th>
                  <th scope="col">Name</th>
                  <th scope="col">Price</th>
                  <th scope="col">Quantity</th>
                  <th scope="col">Subtotal</th>
                  <th scope="col">Remove</th>
                </tr>
              </thead>
              <tbody>
                <% if (cart && cart.products && cart.products.length> 0) { %>
                  <% cart.products.forEach(productItem=> { let product = productItem._id; %>
                    <tr>
                      <td class="image product-thumbnail">
                        <img
                          src="/uploads/products-images/<%= product.primaryImages && product.primaryImages.length > 0 ? product.primaryImages[0].name : 'default-image.jpg' %>"
                          alt="#" />
                      </td>
                      <td class="product-des product-name">
                        <h5class="product-name"><a href="/shop/productDetails/<%= product._id %>">
                            <%= product.productName %>
                          </a></h5>
                      </td>
                      <td class="price" data-title="Price">
                        <span>$<%= productItem.price.toFixed(2) %></span>
                      </td>
                      <td class="text-center" data-title="Quantity">
                        <div class="detail-qty border radius m-auto">
                          <a href="#" class="qty-down" data-product-id="<%= product._id %>"><i
                              class="fi-rs-angle-small-down"></i></a>
                          <span class="qty-val" data-quantity="<%= productItem.quantity %>"
                            data-product-id="<%= product._id %>">
                            <%= productItem.quantity %>
                          </span>
                          <a href="#" class="qty-up" data-product-id="<%= product._id %>"><i
                              class="fi-rs-angle-small-up"></i></a>
                        </div>
                      </td>
                      <td class="text-right" data-title="Subtotal">
                        <span class="subtotal" data-product-id="<%= product._id %>">$<%= (productItem.price *
                            productItem.quantity).toFixed(2) %></span>
                      </td>
                      <td class="action" data-title="Remove">
                        <form action="/cart/remove" method="POST" class="remove-item-form">
                          <input type="hidden" name="productId" value="<%= product._id %>" />
                          <button type="submit" class="text-muted remove-item-btn">
                            <i class="fi-rs-trash"></i>
                          </button>
                        </form>
                      </td>
                    </tr>
                    <% }) %>
                      <tr>
                        <td colspan="6" class="text-end">
                          <a href="/allProducts" class="btn"><i class="fi-rs-shopping-bag mr-10"></i>Continue
                            Shopping</a>
                          <button id="clear-cart-btn" class="text-muted clear-cart-btn">
                            <i class="fi-rs-cross-small"></i> Clear Cart
                          </button>
                        </td>
                      </tr>
                      <% } else { %>
                        <tr>
                          <td colspan="6" class="text-center">No products in the cart.</td>
                        </tr>
                        <tr>
                          <td colspan="6" class="text-end">
                            <a href="/allProducts" class="btn"><i class="fi-rs-shopping-bag mr-10"></i>Continue
                              Shopping</a>
                            <button id="clear-cart-btn" class="text-muted clear-cart-btn">
                              <i class="fi-rs-cross-small"></i> Clear Cart
                            </button>
                          </td>
                        </tr>
                        <% } %>
              </tbody>
            </table>
          </div>
        </div>
        <div class="col-4">
          <div class="border p-md-4 p-30 border-radius cart-totals">
            <div class="heading_s1 mb-3">
              <h4>Cart Totals</h4>
            </div>
            <div class="table-responsive">
              <table class="table">
                <tbody>
                  <tr>
                    <td class="cart_total_label">Cart Subtotal</td>
                    <td class="cart_total_amount">
                      <span class="font-lg fw-900 text-brand" id="cart-subtotal">$<%= cart.totalPrice.toFixed(2) %>
                      </span>
                    </td>
                  </tr>
                  <tr>
                    <td class="cart_total_label">Shipping</td>
                    <td class="cart_total_amount">
                      <i class="ti-gift mr-5"></i> Free Shipping
                    </td>
                  </tr>
                  <tr>
                    <td class="cart_total_label">Total</td>
                    <td class="cart_total_amount">
                      <strong><span class="font-xl fw-900 text-brand" id="cart-total">$<%= cart.totalPrice.toFixed(2) %>
                        </span></strong>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            <a href="javascript:void(0);" id="proceedToCheckOut" class="btn">
              <i class="fi-rs-box-alt mr-10"></i> Proceed To CheckOut
            </a>



          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<script>
  document.querySelectorAll(".remove-item-form").forEach((form) => {
    form.addEventListener("submit", async (event) => {
      event.preventDefault();
      const formData = new FormData(form);
      const productId = formData.get("productId");

      try {
        const response = await fetch("/cart/remove", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ productId }),
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            title: "Removed!",
            text: "Product removed from cart.",
            icon: "success",
            confirmButtonText: "OK",
          }).then(() => {
            location.reload(); // Reload the page to reflect changes
          });
        } else {
          Swal.fire({
            title: "Error!",
            text: result.error,
            icon: "error",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        Swal.fire({
          title: "Error!",
          text: "An error occurred while removing the product from the cart.",
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    });
  });
</script>
<script>
  document.getElementById('clear-cart-btn').addEventListener('click', async (event) => {
    event.preventDefault();

    const result = await Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to remove all items from the cart?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, clear it!',
      cancelButtonText: 'No, keep it'
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch('/cart/clearCart', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        const result = await response.json();

        if (result.success) {
          Swal.fire({
            title: 'Cleared!',
            text: 'All items have been removed from your cart.',
            icon: 'success',
            confirmButtonText: 'OK'
          }).then(() => {
            location.reload(); // Reload the page to reflect changes
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: result.error,
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      } catch (error) {
        Swal.fire({
          title: 'Error!',
          text: 'An error occurred while clearing the cart.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    }
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.qty-up').forEach(button => {
      button.addEventListener('click', function (e) {
        e.preventDefault();
        const productId = this.getAttribute('data-product-id');
        const qtyVal = document.querySelector(`.qty-val[data-product-id="${productId}"]`);
        const newQty = parseInt(qtyVal.innerText) + 1;
        updateQuantity(productId, newQty);
      });
    });

    document.querySelectorAll('.qty-down').forEach(button => {
      button.addEventListener('click', function (e) {
        e.preventDefault();
        const productId = this.getAttribute('data-product-id');
        const qtyVal = document.querySelector(`.qty-val[data-product-id="${productId}"]`);
        const newQty = parseInt(qtyVal.innerText) - 1;
        if (newQty > 0) {
          updateQuantity(productId, newQty);
        }
      });
    });

    function updateQuantity(productId, newQty) {
      const qtyVal = document.querySelector(`.qty-val[data-product-id="${productId}"]`);
      qtyVal.innerText = newQty;

      const price = parseFloat(document.querySelector(`.price[data-title="Price"] span`).innerText.substring(1));
      const newSubtotal = (price * newQty).toFixed(2);
      document.querySelector(`.subtotal[data-product-id="${productId}"]`).innerText = `$${newSubtotal}`;

      updateCartTotals();

      // Send AJAX request to update quantity in the server
      fetch('/cart/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity: newQty }),
      })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Update the cart totals
            document.getElementById('cart-subtotal').innerText = `$${data.totalPrice.toFixed(2)}`;
            document.getElementById('cart-total').innerText = `$${data.totalPrice.toFixed(2)}`;
          } else {
            // Handle error
            alert('Error updating quantity: ' + data.message);
          }
        })
        .catch(error => {
          // Handle error
          alert('Error updating quantity: ' + error.message);
        });
    }

    function updateCartTotals() {
      let total = 0;
      document.querySelectorAll('.subtotal').forEach(subtotal => {
        total += parseFloat(subtotal.innerText.substring(1));
      });
      document.getElementById('cart-subtotal').innerText = `$${total.toFixed(2)}`;
      document.getElementById('cart-total').innerText = `$${total.toFixed(2)}`;
    }
  });
</script>

<script>
 $(document).ready(function() {
    $('#proceedToCheckOut').click(function() {
        // Redirect to the server-side route to handle the logic
        window.location.href = '/cart/check';
    });

    // Check URL parameters for messages
    const urlParams = new URLSearchParams(window.location.search);
    const error = urlParams.get('error');
    const message = urlParams.get('message');

    if (error) {
        let errorMessage;
        switch (error) {
            case 'empty':
                errorMessage = 'Your cart is empty. Please add products before proceeding.';
                break;
            case 'server':
            default:
                errorMessage = 'There was an issue checking your cart. Please try again later.';
                break;
        }

        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: errorMessage,
        });
    }

    if (message) {
        let infoMessage;
        switch (message) {
            case 'out_of_stock':
                infoMessage = `Some products in your cart are out of stock.<br> We are removing the out-of-stock products.`;
                break;
            case 'quantity_adjusted':
                infoMessage = 'We are adjusting the quantity of some products in your cart to 5.';
                break;
            case 'out_of_stock_quantity_adjusted':
                infoMessage = `Some products in your cart are out of stock.<br> We are removing the out-of-stock products.<br>We are adjusting the quantity of some products in your cart to 5.`;
                break;
        }

        Swal.fire({
            icon: 'info',
            title: 'Notice',
            text: infoMessage,
        });
    }
});


</script>