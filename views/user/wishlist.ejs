<section class="mt-50 mb-50">
  <div class="container">
      <div class="row">
          <div class="col-12">
              <div class="table-responsive">
                  <table class="table shopping-summery text-center">
                      <thead>
                          <tr class="main-heading">
                              <th scope="col" colspan="2">Product</th>
                              <th scope="col">Price</th>
                              <th scope="col">Stock Status</th>
                              <th scope="col">Action</th>
                              <th scope="col">Remove</th>
                          </tr>
                      </thead>
                      <tbody>
                          <% products.forEach(product => { %>
                              <tr>
                                  <td class="image product-thumbnail">
                                    <a href="/shop/productDetails/<%= product._id %>"><img src="/uploads/products-images/crp/<%= product.primaryImages[0] ? product.primaryImages[0].name : product.secondaryImages[0].name %>" alt="#"></a> 
                                  </td>
                                  <td class="product-des product-name">
                                      <h5 class="product-name"><a href="/shop/productDetails/<%= product._id %>"><%= product.productName %></a></h5>
                                  </td>
                                  <td class="price" data-title="Price"><span>$<%= product.price %>.00</span></td>
                                  <td class="text-center" data-title="Stock">
                                      <span class="<%= product.stock > 0 ? 'color3 font-weight-bold' : 'text-danger font-weight-bold' %>">
                                          <%= product.stock > 0 ? 'In Stock' : 'Out of Stock' %>
                                      </span>
                                  </td>
                                  <td class="t" data-title="Cart">
                                  <% if(product.stock===0||product.stock >0 ){ %>
                                    <div class="product-action-1 show">
                                        <% if (product.stock > 0) { %>
                                            <button class="btn btn-sm add-to-cart-btn" data-product-id="<%- product._id %>">
                                                <i class="fi-rs-shopping-bag-add"></i> Add to cart
                                            </button>
                                        <% } else { %>
                                            <button class="btn btn-sm out-of-stock-btn" data-product-id="<%- product._id %>">
                                                <i class="fi-rs-shopping-bag-add"></i> Out of Stock
                                            </button>
                                        <% } %>
                                    </div>
                                                                          
                                  <% }else{ %>
                                  <button class="btn btn-sm btn-secondary"><i class="fi-rs-headset"></i>Contact Us</button>
                                  <% } %>
                              </td>
                                  <td class="action" data-title="Remove">
                                      <a href="#" class="remove-from-wishlist-btn" data-product-id="<%= product._id %>"><i class="fi-rs-trash"></i></a>
                                  </td>
                              </tr>
                          <% }); %>
                      </tbody>
                  </table>
              </div>
          </div>
      </div>
  </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Handle Add to Cart button clicks
    document.querySelectorAll('.add-to-cart-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-product-id');

            // Show confirmation message with SweetAlert2
            Swal.fire({
                title: 'Add to Cart?',
                text: 'Do you want to add this product to your cart?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, add it!',
                cancelButtonText: 'No, cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send a request to add the product to the cart
                    fetch('/cart/addToCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId, quantity: 1 }) // Ensure quantity is set to 1
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Added!',
                                text: 'The product has been added to your cart.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to add product to cart.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while adding the product.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
                }
            });
        });
    });

    // Handle Out of Stock button clicks
    document.querySelectorAll('.out-of-stock-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            Swal.fire({
                title: 'Out of Stock',
                text: 'This product is currently out of stock.',
                icon: 'info',
                confirmButtonText: 'OK'
            });
        });
    });

    // Handle Remove from Wishlist button clicks
    document.querySelectorAll('.remove-from-wishlist-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const productId = this.getAttribute('data-product-id');

            // Show confirmation message with SweetAlert2
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to remove this product from your wishlist?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'No, keep it',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send a request to remove the product from the wishlist
                    fetch('/wishlist/remove', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ productId })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: 'Removed!',
                                text: 'The product has been removed from your wishlist.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                // Reload the page or remove the item from the DOM
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Failed to remove product from wishlist. Please log in.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                // Redirect to login page
                                window.location.href = '/login';
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while removing the product.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    });
                }
            });
        });
    });
});
</script>
